@page "/modal"
@inject ILogger<Modal> logger

<MatButton Style="text-transform: capitalize;" Raised="true" Icon="library_add" OnClick="@(() => OpenModal())">Add Expense</MatButton>

<ul class="costListItem">
    @foreach (var value in CostsList)
    {
        <li><span class="txtBold">@value.Expense</span> - @value.Cost</li>
        <li><TaxCard Name="@value.Expense" Cost="@value.Cost"></TaxCard></li>
    }
</ul>

<p class="totalText">The total sum of the expenses costs is: <span class="txtBold">@sumCosts</span> </p>

<MatDialog  @bind-IsOpen="@modalOpen">
    <MatDialogContent>
        <div class="circle">
            <img src="/Images/mujer.jpg" alt="Imagen" />
        </div>
        <div class="form">
            <MatTextField @bind-Value="@expense" Label="Expense" />
            <MatTextField @bind-Value="@cost" Label="Cost" />
        </div>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(() => GuardarGasto())">Save</MatButton>
        <MatButton OnClick="@(() => CloseModal())">Close</MatButton>
    </MatDialogActions>
</MatDialog>



@code {
    private List<Expenses> CostsList = new List<Expenses>();
    private decimal sumCosts = 0;
    private bool modalOpen = false;
    string? expense;
    string? cost;
    string? trimCost;

    void OpenModal() => modalOpen = true;

    void CloseModal()
    {
        modalOpen = false;
        expense = string.Empty;
        cost = string.Empty;
        trimCost = string.Empty;
    }


    private void GuardarGasto()
    {


        foreach (char c in cost)
        {
            if (c != '.')
            {
                trimCost += c;
            } 
            else if (c == '.')
            {
                trimCost += ',';
            }
        }

        Expenses newExpense = new Expenses()
            {
                Expense = expense,
                Cost = trimCost
            };

        CostsList.Add(newExpense);
        sumCosts = CostsList.Sum(t => decimal.Parse(t.Cost));


        CloseModal();
    }
}








