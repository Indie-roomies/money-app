@inject IMatDialogService dialog

<MatButton Style="text-transform: capitalize; margin:auto;" Raised="true" Icon="library_add" OnClick="@(() => OpenModal())">Add Expense</MatButton>



<MatDialog @bind-IsOpen="@modalOpen">
    <MatDialogContent>
        <div class="circle">
            <img src="/Images/mujer.jpg" alt="Imagen" />
        </div>
        <div class="form">
            <MatTextField @bind-Value="@expense"  Label="Expense" />
            <MatTextField  @bind-Value="@cost" Label="Cost" />
        </div>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="Save">Save</MatButton>
        <MatButton OnClick="@(() => CloseModal())">Close</MatButton>
    </MatDialogActions>
</MatDialog>
@code {


    [Parameter]
    public EventCallback<Expenses> OnClickEvent { get; set; }


    [Parameter]
    public decimal Total { get; set; }



    //private decimal sumCosts = 0;
    string expense = String.Empty;
    decimal cost = 0;
    string trimCost = String.Empty;

    private bool modalOpen = false;



    void OpenModal() => modalOpen = true;

    void CloseModal()
    {
        modalOpen = false;
        expense = string.Empty;
        cost = 0;
        trimCost = string.Empty;
    }

    private async Task Save()
    {
           // Validating total
        if( Total == 0)
        {
            await dialog.AlertAsync("Debes ingresar un valor total");
            CloseModal();
        }
        else
        {
            var Tax = new Expenses() { Expense = expense, Cost = cost };
            await OnClickEvent.InvokeAsync(Tax);
            CloseModal();
        }

    }

    

}
