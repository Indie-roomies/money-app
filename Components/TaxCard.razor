


<MatCard>

    <MatCardContent>
        <div class="d-flex justify-content-between p-3 w-75">
            <div>@ModelTax.Expense</div>
            <MatTextField @bind-Value="@ModelTax.Cost" Disabled="@Disabled" Label="Cost"></MatTextField>
            <MatCardActionButtons Class="w-25">
                <MatButton OnClick="Delete">Delete</MatButton>
                <MatButton OnClick="AcceptEdit">Edit</MatButton>
                @if(Disabled == false)
                {

                    <MatButton OnClick="Update">Save Edit</MatButton>
                }
            </MatCardActionButtons>
        </div>
    </MatCardContent>


</MatCard>
@code {

    [Parameter, EditorRequired]
    public Expenses ModelTax { get; set; }
    [Parameter]
    public EventCallback<int> DestroyEvent { get; set; }

    [Parameter]
    public EventCallback<Expenses> UpdateEvent { get; set; }

    public bool Disabled = true;

    private Expenses tax = new();

    protected override void OnInitialized()
    {
        tax.Id = ModelTax.Id;
        tax.Expense = ModelTax.Expense;
        tax.Cost = ModelTax.Cost;
    }
    private void AcceptEdit()
    {
        Disabled = false;
    }
    private async Task Delete()
    {
        await DestroyEvent.InvokeAsync(ModelTax.Id);
    }

    private async Task Update()
    {
        Disabled = true;
        await UpdateEvent.InvokeAsync(new Expenses { Id = ModelTax.Id, Cost = ModelTax.Cost, Expense = ModelTax.Expense });
    }

}
